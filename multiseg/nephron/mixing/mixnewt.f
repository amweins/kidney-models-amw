	SUBROUTINE MIXNEWT
C
	INTEGER SOLS,NTUB
C
C       SOLS-   NUMBER OF SOLUTES
C       EXP-    TOTAL NUMBER OF EXPTS. IN THE RUN
C	NTUB-	NUMBER OF INPUT TUBULES
C       TUBULE INDICES: 1- SF, 2-6- JM, 7- OUTFLOW
C
C GENERAL PARAMETERS
	DOUBLE PRECISION
     1   EPSI,PKC,PKN,PKP
C LUMINAL VARIABLES
	DOUBLE PRECISION
     1   CM(15,10),IMPM(10),LCHM(10),
     1   FVM(10),FKM(16,10)
C
C       CM-     LUMINAL SOLUTE CONCENTRATION
C       IMPM-   LUMINAL IMPERMEANT (INCL GLUCOSE)
C       LCHM-   LUMINAL PH
C	FVM-	LUMINAL VOLUME FLOW RATE
C	FKM-	LUMINAL SOLUTE FLUX RATE
C
	DOUBLE PRECISION TCM,TPM,TNM,QCM,QPM,QNM
	DOUBLE PRECISION PHI,GAMMA,DGAM,PPHI,NDERIV
C
C       TCM-    SUM OF HCO3 + H2CO3
C       TPM-    TOTAL PHOSPHATE
C       TNM-    TOTAL AMMONIA
C       QCM-    RATIO OF BASE TO ACID FOR HCO3
C       QPM-    RATIO OF BASE TO ACID FOR HPO4
C       QNM-    RATIO OF BASE TO ACID FOR NH3
C
C       PHI-    ERROR VECTOR- TO BE ZEROED VIA NEWTON ITERATION
C       GAMMA-  VARIABLE VECTOR
C       DGAM-   VARIABLE INCREMENT TO COMPUTE NUMERICAL DERIVATIVE
C       PPHI-   ERROR VECTOR AT GAMMA + DGAM
C       NDERIV- NUMERICAL DERIVATIVE OF PHI WITH RESPECT TO GAMMA
C
        COMMON SOLS,NTUB,
     1   CM,IMPM,LCHM,FVM,FKM
C
C EXPERIMENTS WILL CYCLE FROM THIS POINT.
C
C  SOLUTE INDEX:
C	1-	NA+
C	2-	K+
C	3-	CL-
C	4-	HCO3-
C	5-	H2CO3
C	6-	CO2
C	7-	HPO4--
C	8-	H2PO4-
C	9-	UREA
C	10-	NH3
C	11-	NH4+
C	12-	H+
C
C PARAMETERS ARE SET
C
	PKC=3.57
	PKP=6.8
	PKN=9.15
C
        EPSI=1.D-20
	DGAM=1.D-4
C
C START THE MIXING CALCULATION
C
        NN=NTUB+1
        FVM(NN) = 0.D0
        DO 62 I=1,SOLS
   62   FKM(I,NN) = 0.D0
        FKM(SOLS+1,NN) = 0.D0
C
        DO 65 J=1,NTUB
        FVM(NN) = FVM(NN) + FVM(J)
        DO 64 I=1,SOLS
   64   FKM(I,NN) = FKM(I,NN) + FKM(I,J)
        FKM(SOLS+1,NN) = FKM(SOLS+1,NN) + FKM(SOLS+1,J)
   65   CONTINUE
C
C OUTFLOW CONCENTRATIONS:
C  THESE ARE ACCURATE FOR NON-REACTING SPECIES
C  AND WILL SERVE AS THE INITIAL GUESSES FOR THE BUFFER PAIRS
C
        DO 70 I=1,SOLS
   70   CM(I,NN) = FKM(I,NN)/FVM(NN)
        IMPM(NN) = FKM(SOLS+1,NN)/FVM(NN)
	LCHM(NN)=PKC + DLOG10(CM(4,NN)/CM(5,NN))
	TCM=CM(4,NN)+CM(5,NN)
	TPM=CM(7,NN)+CM(8,NN)
	TNM=CM(10,NN)+CM(11,NN)
C
	CM(SOLS,NN)=10.**(-LCHM(NN))
	QCM=10.**(LCHM(NN)-PKC)
	QPM=10.**(LCHM(NN)-PKP)
	QNM=10.**(LCHM(NN)-PKN)
C
	CM(5,NN)=TCM/(1.+QCM)
	CM(4,NN)=TCM-CM(5,NN)
	CM(8,NN)=TPM/(1.+QPM)
	CM(7,NN)=TPM-CM(8,NN)
	CM(11,NN)=TNM/(1.+QNM)
	CM(10,NN)=TNM-CM(11,NN)
C
C   START THE SPATIAL ITERATION.
C
   79   ITER=0
   80   ITER=ITER+1
	PRINT 82, ITER
   82   FORMAT(6X,'ITER=',I5,$)
C
C THIS PHI REPRESENTS NET PROTON CREATION AT THE POINT OF MIXING
C
        PHI = FVM(NN)*CM(12,NN)-FKM(12,NN) +
     1   FVM(NN)*CM(5,NN)-FKM(5,NN) +
     1   FVM(NN)*CM(8,NN)-FKM(8,NN) +
     1   FVM(NN)*CM(11,NN)-FKM(11,NN)
C
	PRINT 84, PHI
   84   FORMAT ('+',D12.4)
	IF(DABS(PHI).LT.EPSI) GO TO 98
C
C PHI IS TOO LARGE.
C   WE DETERMINE THE DERIVATIVE OF PHI WITH RESPECT TO GAMMA,
C AND STORE THIS IN NDERIV.
C
        GAMMA = LCHM(NN)
C
	GAMMA=GAMMA+DGAM
C
        LCHM(NN) = GAMMA
C
	CM(SOLS,NN)=10.**(-LCHM(NN))
	QCM=10.**(LCHM(NN)-PKC)
	QPM=10.**(LCHM(NN)-PKP)
	QNM=10.**(LCHM(NN)-PKN)
C
	CM(5,NN)=TCM/(1.+QCM)
	CM(4,NN)=TCM-CM(5,NN)
	CM(8,NN)=TPM/(1.+QPM)
	CM(7,NN)=TPM-CM(8,NN)
	CM(11,NN)=TNM/(1.+QNM)
	CM(10,NN)=TNM-CM(11,NN)
C
        PPHI = FVM(NN)*CM(12,NN)-FKM(12,NN) +
     1   FVM(NN)*CM(5,NN)-FKM(5,NN) +
     1   FVM(NN)*CM(8,NN)-FKM(8,NN) +
     1   FVM(NN)*CM(11,NN)-FKM(11,NN)
C
        NDERIV=(PPHI-PHI)/DGAM
C
	GAMMA=GAMMA-DGAM
C
C THE JACOBIAN HAS BEEN COMPUTED NUMERICALLY. THE CURRENT GUESSES
C SIT IN GAMMA AND THE ERRORS IN PHI.  IT REMAINS TO COMPUTE
C NDERIV-1(PHI) AT THE CORRECTION TO BE SUBTRACTED FROM GAMMA.
C
        GAMMA=GAMMA-PHI/NDERIV
C
C RESET THE GUESSES IN THE NAMES BY WHICH WE KNOW THEM.
C
        LCHM(NN) = GAMMA
C
	CM(SOLS,NN)=10.**(-LCHM(NN))
	QCM=10.**(LCHM(NN)-PKC)
	QPM=10.**(LCHM(NN)-PKP)
	QNM=10.**(LCHM(NN)-PKN)
C
	CM(5,NN)=TCM/(1.+QCM)
	CM(4,NN)=TCM-CM(5,NN)
	CM(8,NN)=TPM/(1.+QPM)
	CM(7,NN)=TPM-CM(8,NN)
	CM(11,NN)=TNM/(1.+QNM)
	CM(10,NN)=TNM-CM(11,NN)
C
	IF (ITER.LT.50) GO TO 80
C
C IF THE SPATIAL ITERATION FAILS TO CONVERGE THE PROGRAM STOPS.
	PRINT 92
  92    FORMAT (' TOO MANY ITERATIONS IN MIX')
	GO TO 100
C
C THE SPATIAL STEP CONVERGED,AND
C THE PROGRAM PICKS UP AT THIS POINT:
C
   98   CONTINUE
        DO 95 I=1,SOLS
   95   FKM(I,NN)=FVM(NN)*CM(I,NN)
C
        PRINT 97
   97   FORMAT (' MIXING PROBLEM SOLVED')
C
  100   RETURN
	END
