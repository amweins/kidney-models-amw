	SUBROUTINE AE1(VV,SS)
C
C THE PROGRAM SOLVES FOR THE STEADY-STATE AE1
C CALL IS OF THE FORM:
C	CALL AE1(V,ICF(CL),ICF(HCO3),ECF(CL),ECF(HCO3))
C
	DOUBLE PRECISION VV,SS(4)
C
C       S-	SUBSTRATE CONCENTRATIONS (MMOL/ML)
C		S1-	CL(1)
C		S2-	HCO3(1)
C		S3-	CL(2)
C		S4-	HCO3(2)
C       V-	NET FORWARD REACTION VELOCITY
C
	INTEGER SOLS
	DOUBLE PRECISION CSX(2,2),CX(2),CXT,C(2,2),K(2,2),CS(2,2),
     1    P(2,2),JS(2,2),JSN(2),KI(2),TCX(2)
	DOUBLE PRECISION DELTA(2),EPSILON(2),SIGMA
C
C	SOLS-	NUMBER OF SOLUTE SPECIES
C	CSX(I,J)-CONCENTRATION OF CARRIER-I COMPLEX ON SIDE J  (MMOL/CM2)
C	C(I,J)-	CONCENTRATION OF FREE SPECIES I ON SIDE J      (MMOL/CM3)
C	CX(J)-	CONCENTRATION OF FREE CARRIER ON SIDE J        (MMOL/CM2)
C	CXT-	CONCENTRATION OF TOTAL CARRIER                 (MMOL/CM2)
C	K(I,J)- EQUILIBRIUM BINDING CONSTANT OF I ON SIDE J    (MMOL/CM3)
C	CS(I,J)-CONCENTRATION OF I (SCALED BY K) ON SIDE J 
C	P(I,J)-	PERMEATION OF I FROM SIDE J                    (   /S   )
C       JS(I,J)-UNIDIRECTIONAL FLUX OF I FROM SIDE J 	      (MMOL/S*CM2)
C       JSN(I) -NET FLUX OF I FROM SIDE 1 TO SIDE 2 	      (MMOL/S*CM2)
C	KI(I)-	NON-COMPETITIVE INHIBITORY CONSTANT OF I       (MMOL/CM3)
C	TCX(J)-TOTAL CARRIER ON SIDE J                         (MMOL/CM2)
C
C	DELTA(J)-COMPOSITE PARAMETER
C	EPSILON(J)-COMPOSITE PARAMETER                         (   /S   )
C	SIGMA-	COMPOSITE PARAMETER                            (   /S   )
C
C
	DATA K/
     1    .3573D+03, .9022D+02, .3873D+02, .9778D+01/
	DATA KI/
     1    .1720D+03, .1000D+05/
	DATA P/
     1    .2440D+03, .1100D+03, .2440D+03, .1100D+03/
C
	SOLS=2
	CXT=1.0
C
C BOUNDARY VALUES ARE READ.
C
	DO 30 I=1,SOLS
	DO 30 J=1,2
   30   C(I,J)=SS(3-I+2*J-2)*1.D3
	DO 35 I=1,SOLS
   35   CXT=CXT*KI(I)/(KI(I)+C(I,1))
C
C CALCULATE THE FLUXES
C
	DO 100 J=1,2
	DELTA(J)=1.D0
	EPSILON(J)=0.D0
	DO 100 I=1,SOLS
	CS(I,J)=C(I,J)/K(I,J)
	DELTA(J)=DELTA(J)+CS(I,J)
	EPSILON(J)=EPSILON(J)+P(I,J)*CS(I,J)
  100   CONTINUE
C
	SIGMA=DELTA(1)*EPSILON(2) + DELTA(2)*EPSILON(1)
C
	DO 110 J=1,2
	CX(J)=CXT*EPSILON(3-J)/SIGMA
	TCX(J)=CX(J)
	DO 110 I=1,SOLS
	CSX(I,J)=CS(I,J)*CX(J)
	JS(I,J)=P(I,J)*CSX(I,J)
	TCX(J)=TCX(J)+CSX(I,J)
  110   CONTINUE
C
	DO 120 I=1,SOLS
  120   JSN(I)=JS(I,1)-JS(I,2)
	VV=JSN(1)
C
	RETURN
	END
