	PROGRAM BREWR
C
C TO SWITCH START AND END POINTS OF EXTERNAL SOLUTES
C  OR PRINT OUT A MIDPOINT SET OF CONCENTRATIONS
C
	INTEGER SOLS,TLIM
C
	DOUBLE PRECISION
     1   Z(12),ZIMPM,ZIMPS,
     1   PKC,PKP,PKN,KCO2,
     1   TPM,TNM,QPM,QNM,
     1   TPS(3),TNS(3),QPS(3),QNS(3),
     1   VM,PM,CM(13),IMPM,LCHM,
     1   VS(3),PS(3),CS(12,3),IMPS(3),LCHS(3),
     1   DT,FVM
C
	CHARACTER*1 SW
C
	OPEN (19,FILE='bound.tem')
	OPEN (22,FILE='bound.dat')
C
	SOLS=12
C
C  SOLUTE INDEX:
C	1-	NA+
C	2-	K+
C	3-	CL-
C	4-	HCO3-
C	5-	H2CO3
C	6-	CO2
C	7-	HPO4--
C	8-	H2PO4-
C	9-	UREA
C	10-	NH3
C	11-	NH4+
C	12-	H+
C
C
	Z(1)=1.D0
	Z(2)=1.D0
	Z(3)=-1.D0
	Z(4)=-1.D0
	Z(5)=0.D0
	Z(6)=0.D0
	Z(7)=-2.D0
	Z(8)=-1.D0
	Z(9)=0.D0
	Z(10)=0.D0
	Z(11)=1.D0
	Z(12)=1.D0
	ZIMPS=0.D0
C
	PKC=3.57
	PKP=6.8
	PKN=9.15
	KCO2=340.
C
C
C BOUNDARY VALUES,ACTIVE TRANSPORT,AND THE TIME INCREMENT ARE
C READ. THE TIME STEP WILL CYCLE FROM THIS POINT.
C
	DO 900, KK = 1,10
C
	READ(19,50,END=901) DT,FVM,
     1  VM,VS(1),VS(2),PM,PS(1),PS(2),IMPM,IMPS(1),IMPS(2),
     1  (CM(I),CS(I,1),CS(I,2),I=1,SOLS-1)
   50   FORMAT (2D12.4,/,3F8.4,/,3F8.4,/,3F8.4,/,(3F14.9))
C
C ASSUMING EQUILIBRIUM BETWEEN DISSOLVED CO2 AND H2CO3
C
	CM(5)=CM(6)/KCO2
	CS(5,1)=CS(6,1)/KCO2
	CS(5,2)=CS(6,2)/KCO2
	LCHM=PKC + DLOG10(CM(4)/CM(5))
	LCHS(1)=PKC + DLOG10(CS(4,1)/CS(5,1))
	LCHS(2)=PKC + DLOG10(CS(4,2)/CS(5,2))
C
	TPM=CM(7)+CM(8)
	TNM=CM(10)+CM(11)
	TPS(1)=CS(7,1)+CS(8,1)
	TPS(2)=CS(7,2)+CS(8,2)
	TNS(1)=CS(10,1)+CS(11,1)
	TNS(2)=CS(10,2)+CS(11,2)
C
	QPM=10.**(LCHM-PKP)
	QNM=10.**(LCHM-PKN)
	QPS(1)=10.**(LCHS(1)-PKP)
	QPS(2)=10.**(LCHS(2)-PKP)
	QNS(1)=10.**(LCHS(1)-PKN)
	QNS(2)=10.**(LCHS(2)-PKN)
C
	CM(8)=TPM/(1.+QPM)
	CM(7)=TPM-CM(8)
	CM(11)=TNM/(1.+QNM)
	CM(10)=TNM-CM(11)
C
	CS(8,1)=TPS(1)/(1.+QPS(1))
	CS(8,2)=TPS(2)/(1.+QPS(2))
	CS(7,1)=TPS(1)-CS(8,1)
	CS(7,2)=TPS(2)-CS(8,2)
	CS(11,1)=TNS(1)/(1.+QNS(1))
	CS(11,2)=TNS(2)/(1.+QNS(2))
	CS(10,1)=TNS(1)-CS(11,1)
	CS(10,2)=TNS(2)-CS(11,2)
C
	CM(3)=IMPM*ZIMPM + CM(1)*Z(1) + CM(2)*Z(2)
	CS(3,1)=IMPS(1)*ZIMPS + CS(1,1)*Z(1) + CS(2,1)*Z(2)
	CS(3,2)=IMPS(2)*ZIMPS + CS(1,2)*Z(1) + CS(2,2)*Z(2)
	DO 130 I=4,SOLS
	CM(3)=CM(3)+CM(I)*Z(I)
	CS(3,1)=CS(3,1)+CS(I,1)*Z(I)
	CS(3,2)=CS(3,2)+CS(I,2)*Z(I)
  130   CONTINUE
C
C
	VS(3)=0.5*(VS(1)+VS(2))
	PS(3)=0.5*(PS(1)+PS(2))
	IMPS(3)=0.5*(IMPS(1)+IMPS(2))
	DO 55 I=1,SOLS
   55   CS(I,3)=0.5*(CS(I,1)+CS(I,2))
C
C COMPUTE AN EXTERNAL MIDPOINT
C
	LCHS(3)=PKC + DLOG10(CS(4,3)/CS(5,3))
C
	TPS(3)=CS(7,3)+CS(8,3)
	TNS(3)=CS(10,3)+CS(11,3)
C
	QPS(3)=10.**(LCHS(3)-PKP)
	QNS(3)=10.**(LCHS(3)-PKN)
C
	CS(8,3)=TPS(3)/(1.+QPS(3))
	CS(7,3)=TPS(3)-CS(8,3)
	CS(11,3)=TNS(3)/(1.+QNS(3))
	CS(10,3)=TNS(3)-CS(11,3)
C
	CS(3,3)=IMPS(3)*ZIMPS + CS(1,3)*Z(1) + CS(2,3)*Z(2)
	DO 135 I=4,SOLS
	CS(3,3)=CS(3,3)+CS(I,3)*Z(I)
  135   CONTINUE
C
C ASSIGN DIRECTION AND DEPTH OF TUBULE
C
  140   PRINT 142
  142   FORMAT(' PRINT THE TUBULE START: I=1,2,3: ',$)
	READ *, II
  144   PRINT 146
  146   FORMAT(' PRINT THE TUBULE END: I=1,2,3: ',$)
	READ *, JJ
C
	WRITE (22,150) DT,FVM,
     1  VM,VS(II),VS(JJ),
     1  PM,PS(II),PS(JJ),
     1  IMPM,IMPS(II),IMPS(JJ),
     1  (CM(I),CS(I,II),CS(I,JJ),I=1,SOLS-1)
  150   FORMAT (2D12.4,/,3F8.4,/,3F8.4,/,3F8.4,/,(3F14.9))
C
	PRINT 152
  152   FORMAT(' ANOTHER TUBULE IN THIS REGION? (y/n): ',$)
	READ *, SW
	IF (SW.EQ.'y') GO TO 140
C
  900   CONTINUE
  901   STOP
	END
