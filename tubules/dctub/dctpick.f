	SUBROUTINE DCTPICK(CHOP)
C SUBROUTINE TO SELECT INTRAEPITHELIAL MODEL VARIABLES FOR OUTPUT
C
	INTEGER SOLS,X,T,CHOP
C
C GENERAL PARAMETERS
	DOUBLE PRECISION
     1   Z(12),RT,RTE,F,
     1   EPSI,DT,RTAU,TIME,DIST,
     1   PKC,PKP,PKN,KHY(5),KDHY(5),L0,L(81,2)
C LUMINAL AND PERITUBULAR PARAMETERS
	DOUBLE PRECISION
     1   VM(81,2),PM(81,2),CM(12,81,2),
     1   IMPM(81,2),LCHM(81),XM(12,81),
     1   VS(81,2),PS(81,2),CS(12,81,2),
     1   IMPS(81,2),LCHS(81),XS(12,81),
     1   TL,DX,RM0,MUM,ETA,
     1   SM(81,2),AM(81,2),FVM(81,2),FKM(13,81,2)
C INTERSPACE PARAMETERS
	DOUBLE PRECISION
     1   AME,AE0,AE(81,2),MUA,CHVL0,CHVL(81,2),MUV,
     1   LPME,LPES,SME(12),SES(12),
     1   HME(12),HES(12),CME(12),CES(12),
     1   VE(81,2),PE(81,2),CE(12,81,2),LCHE(81),XE(12,81),
     1   FEVM(81,2),FEKM(12,81,2),FEVS(81,2),FEKS(12,81,2),CURE(81)
C CELL PARAMETERS
	DOUBLE PRECISION
     1   AIE(3),AI0(3),CLVL0(3),IMP0(3),CLVL(3,81,2),
     1   ZIMP(3),TBUF(3),PKB(3),CBUF(3,81,2),HCBUF(3,81,2),
     1   LPMI(3),LPIS(3),SMI(3,12),SIS(3,12),
     1   HMI(3,12),HIS(3,12),CMI(3,12),CIE(3,12),CIS(3,12),
     1   LMI(3,12,12),LIS(3,12,12),ATMI(3,12,81),ATIS(3,12,81),
     1   VI(3,81,2),PI(3,81,2),CI(3,12,81,2),IMP(3,81),LCHI(3,81),
     1   XI(3,12,81),FIVM(3,81,2),FIKM(3,12,81,2),FIVS(3,81,2),
     1   FIKS(3,12,81,2),CURI(3,81),JV(3,81,2),JK(3,12,81,2)
C SPECIAL TRANSPORTERS
	DOUBLE PRECISION
     1   NP(3),KNPN(3),KNPK(3),KNH4(3),NPHK(3),
     1   LHP(3),XIHP(3),XHP(3),NAE1(3),NTSC(3),NNHE3(3),
     1   JNAK(3,3,81,2),JHK(3,81,2),JHP(3,81,2),
     1   JAE1(3,81,2),JTSC(3,81,2),JNHE3(3,3,81,2)
C
        COMMON SOLS,T,X,
     1   Z,RT,RTE,F,
     1   EPSI,DT,RTAU,TIME,DIST,
     1   PKC,PKP,PKN,KHY,KDHY,L0,L,
     1   VM,PM,CM,IMPM,LCHM,XM,
     1   VS,PS,CS,IMPS,LCHS,XS,
     1   TL,DX,RM0,MUM,ETA,
     1   SM,AM,FVM,FKM,
     1   AME,AE0,AE,MUA,CHVL0,CHVL,MUV,
     1   LPME,LPES,SME,SES,
     1   HME,HES,CME,CES,
     1   VE,PE,CE,LCHE,XE,
     1   FEVM,FEKM,FEVS,FEKS,CURE,
     1   AIE,AI0,CLVL0,IMP0,CLVL,
     1   ZIMP,TBUF,PKB,CBUF,HCBUF,
     1   LPMI,LPIS,SMI,SIS,
     1   HMI,HIS,CMI,CIE,CIS,
     1   LMI,LIS,ATMI,ATIS,
     1   VI,PI,CI,IMP,LCHI,XI,
     1   FIVM,FIKM,FIVS,FIKS,CURI,
     1   JV,JK
	COMMON/KINET/
     1   NP,KNPN,KNPK,KNH4,NPHK,
     1   LHP,XIHP,XHP,NAE1,NTSC,NNHE3,
     1   JNAK,JHK,JHP,JAE1,JTSC,JNHE3
C
	DOUBLE PRECISION CO2GEN,CO2FLX
C
	DOUBLE PRECISION TCO2,AEQ,BEQ,CEQ,PAEQ,PBEQ,
     1    ALPH,RHO,RHON,RHOP,NU,PHI,DPHDNU,PHEQ,
     1    OAEQ,OBEQ,OCEQ,OPAEQ,OPBEQ,OPHEQ
C
C	TCO2-	TOTAL CO2 IN DISQUILIBRIUM (AND EQUILIBRIUM) SOLUTIONS
C	AEQ-	EQUILIBRIUM CONCENTRATION OF H2CO3
C	BEQ-	EQUILIBRIUM CONCENTRATION OF HCO3
C	CEQ-	EQUILIBRIUM CONENTRATION OF CO2
C	PAEQ-	EQUILIBRIUM CONCENTRATION OF ACID PHOSPHATE
C	PBEQ-	EQUILIBRIUM CONCENTRATION OF BASIC PHOSPHATE
C	NU-	EXPONENTIATED DISEQUILIBRIUM PH
C	O...-	EQUILIBRIUM VALUES FOR AN OPEN SYSTEM
C
C
C
C  SOLUTE INDEX:
C	1-	NA+
C	2-	K+
C	3-	CL-
C	4-	HCO3-
C	5-	H2CO3
C	6-	CO2
C	7-	HPO4--
C	8-	H2PO4-
C	9-	UREA
C	10-	NH3
C	11-	NH4+
C	12-	H+
C
C
	CO2GEN = (KDHY(5)*CM(5,X,T) - KHY(5)*CM(6,X,T))*AM(X,T)
	CO2FLX = (FEKM(6,X,T) + FIKM(1,6,X,T))*SM(X,T)
C
C
C COMPUTE THE EQUILIBRIUM PH AND EQUILIBRIUM CO2
C
	ALPH = KHY(5)/KDHY(5)
	RHO  = 10.**(LCHM(X)-PKC)
	RHON = 10.**(LCHM(X)-PKN)
	RHOP = 10.**(LCHM(X)-PKP)
	TCO2 =CM(4,X,T) + CM(5,X,T) + CM(6,X,T)    
	NU = 1.0
C
C
   10   ITER=0
   15   ITER=ITER+1
	PHI = ALPH*NU*RHO*TCO2/(1. + ALPH + ALPH*NU*RHO)
     1   - CM(4,X,T) + (NU - 1.)*CM(7,X,T)/(1. + NU*RHOP)
     1    + (NU - 1.)*CM(10,X,T)/(1. + NU*RHON)
	IF(DABS(PHI).LT.1.D-16) GO TO 50
C
C PHI IS TOO LARGE.
C   WE DETERMINE THE DERIVATIVE OF PHI WITH RESPECT TO NU.
C
	DPHDNU = ALPH*(1.+ALPH)*RHO*TCO2/((1. + ALPH + ALPH*NU*RHO)**2)
     1    + (1. + RHOP)*CM(7,X,T)/((1. + NU*RHOP)**2)
     1    + (1. + RHON)*CM(10,X,T)/((1. + NU*RHON)**2)
C
C IT REMAINS TO COMPUTE C NDERIV-1(PHI) AT THE CORRECTION TO BE 
C  SUBTRACTED FROM NU.
C
	NU = NU - PHI/DPHDNU
	IF (ITER.LT.50) GO TO 15
C
C IF THE SPATIAL ITERATION FAILS TO CONVERGE
	PRINT 40
   40   FORMAT (' TOO MANY ITERATIONS IN DCT:EQLIB')
	STOP
C
C THE SPATIAL STEP CONVERGED,AND
C THE PROGRAM PICKS UP AT THIS POINT:
C
   50   BEQ = ALPH*NU*RHO*TCO2/(1. + ALPH + ALPH*NU*RHO)
	AEQ = BEQ/(NU*RHO)
	CEQ = AEQ/ALPH
	PBEQ = NU*(1. + RHOP)*CM(7,X,T)/(1. + NU*RHOP) 
	PAEQ = PBEQ/(NU*RHOP)
	PHEQ = DLOG10(NU)
C
C
C NOW COMPUTE THE VALUES FOR AN OPEN SYSTEM
C
	OCEQ = CM(6,X,T)
	OAEQ = ALPH*OCEQ
C
  110   ITER=0
  115   ITER=ITER+1
	PHI = ALPH*NU*RHO*OCEQ  - CM(4,X,T) 
     1    + (NU - 1.)*CM(7,X,T)/(1. + NU*RHOP)
     1    + (NU - 1.)*CM(10,X,T)/(1. + NU*RHON)
	IF(DABS(PHI).LT.1.D-16) GO TO 150
C
C PHI IS TOO LARGE.
C   WE DETERMINE THE DERIVATIVE OF PHI WITH RESPECT TO NU.
C
	DPHDNU = ALPH*RHO*OCEQ
     1    + (1. + RHOP)*CM(7,X,T)/((1. + NU*RHOP)**2)
     1    + (1. + RHON)*CM(10,X,T)/((1. + NU*RHON)**2)
C
C IT REMAINS TO COMPUTE C NDERIV-1(PHI) AT THE CORRECTION TO BE 
C  SUBTRACTED FROM NU.
C
	NU = NU - PHI/DPHDNU
	IF (ITER.LT.50) GO TO 115
C
C IF THE SPATIAL ITERATION FAILS TO CONVERGE
	PRINT 140
  140   FORMAT (' TOO MANY ITERATIONS IN IMCT:EQLIB')
	STOP
C
C THE SPATIAL STEP CONVERGED,AND
C THE PROGRAM PICKS UP AT THIS POINT:
C
  150   OBEQ = ALPH*NU*RHO*OCEQ
	OPBEQ = NU*(1. + RHOP)*CM(7,X,T)/(1. + NU*RHOP) 
	OPAEQ = OPBEQ/(NU*RHOP)
	ONH3EQ = NU*(1. + RHON)*CM(10,X,T)/(1. + NU*RHON) 
	ONH4EQ = ONH3EQ/(NU*RHON)
	OPHEQ = DLOG10(NU)
C
C
  470   WRITE (12,480) DIST, 6.D9*CO2GEN, 
     1    6.D10*CO2GEN*DX,-PHEQ, 1.D3*CEQ,-OPHEQ
  480   FORMAT (8E16.8)
C
	RETURN
	END
